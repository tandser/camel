<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://camel.apache.org/schema/spring
                           http://camel.apache.org/schema/spring/camel-spring.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jdbc
                           http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <bean id="jms" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.spring.ActiveMQConnectionFactory">
                <property name="brokerURL" value="tcp://localhost:61616"/>
            </bean>
        </property>
    </bean>

    <context:property-placeholder location="classpath:properties/postgres@localhost.properties"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${localhost.driverClassName}"/>
        <property name="url"             value="${localhost.url}"/>
        <property name="username"        value="${localhost.username}"/>
        <property name="password"        value="${localhost.password}"/>
    </bean>

    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:ddl/create.ddl"/>
    </jdbc:initialize-database>

    <bean id="handler" class="ru.tandser.camel.Handler"/>

    <camelContext id="camelContext" xmlns="http://camel.apache.org/schema/spring">
        <route>
            <from uri="file:data?noop=true"/>
            <choice>
                <when>
                    <simple>${file:ext} == 'xml'</simple>
                    <to uri="bean:handler?method=handleXml"/>
                </when>
                <when>
                    <simple>${file:ext} == 'txt'</simple>
                    <to uri="bean:handler?method=handleTxt"/>
                </when>
                <otherwise>
                    <to uri="bean:handler?method=handleAny"/>
                </otherwise>
            </choice>
        </route>
    </camelContext>

</beans>